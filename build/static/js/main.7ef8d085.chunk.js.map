{"version":3,"sources":["utils/httpUtils.js","utils/translateUtils.js","api.js","Translators/Translator.js","Translators/Item.js","Translators/WikipediaTranslator.js","Translators/WikidataTranslator.js","components/TranslateField.js","components/SelectLanguage.js","App.js","reportWebVitals.js","index.js"],"names":["httpGetAsync","theUrl","callback","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","getUrl","url","params","key","isLocaleSubstring","big","small","length","i","substringBig","substring","b","a","localeCompare","undefined","sensitivity","cleanHref","word","html","DOMParser","parseFromString","body","textContent","getRightID","wordList","suggestion","arguments","getValue","getID","value","cleanParenthesis","newWord","langCode","ab","aa","af","ak","sq","am","ar","an","hy","as","av","ae","ay","az","bm","ba","eu","be","bn","bh","bi","bs","br","bg","my","ca","ch","ce","ny","zh","cv","kw","co","cr","hr","cs","da","dv","nl","dz","en","eo","et","ee","fo","fj","fi","fr","ff","gl","ka","de","el","gn","gu","ht","ha","he","hz","hi","ho","hu","ia","id","ie","ga","ig","ik","io","is","it","iu","ja","jv","kl","kn","kr","ks","kk","km","ki","rw","ky","kv","kg","ko","ku","kj","la","lb","lg","li","ln","lo","lt","lu","lv","gv","mk","mg","ms","ml","mt","mi","mr","mh","mn","na","nv","nb","nd","ne","ng","nn","no","ii","nr","oc","oj","cu","om","or","os","pa","pi","fa","pl","ps","pt","qu","rm","rn","ro","ru","sa","sc","sd","se","sm","sg","sr","gd","sn","si","sk","sl","so","st","es","su","sw","ss","sv","ta","te","tg","th","ti","bo","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","cy","wo","fy","xh","yi","yo","za","zu","mathsLang","Translator","Object","classCallCheck","this","setResult","x","setSuggestion","constructor","Error","fromLang","toLang","Item","description","WikipediaTranslator","_this","possibleConstructorReturn","getPrototypeOf","call","searchText","suggestedPageID","searchPageID","searchingSuggestion","callbackSend","bind","assertThisInitialized","callbackTranslate","getTranslatedWord","srsearchValue","action","list","format","origin","srwhat","srlimit","srsearch","api_url","response","JSON","parse","prop","pageids","lllang","lllimit","data","translatedWord","res","desc","e","console","error","stack","TypeError","WikidataTranslator","searchID","suggestedID","srprop","ids","languages","props","TranslateField","inputRef","React","createRef","translators","setResults","Array","fill","event","preventDefault","target","search","current","runTranslators","_this2","translate","result","prevResult","map","val","index","array","suggest","prevSuggestion","_loop","react_default","createElement","onSubmit","name","placeholder","ref","type","Component","SelectLanguage","langCodeKey","keys","sort","handleSelect","setLang","Dropdown","onSelect","Toggle","variant","lang","Menu","eventKey","getResult","results","App","_React$useState","useState","_React$useState2","slicedToArray","_React$useState3","_React$useState4","suggestions","_React$useState5","_React$useState6","setFromLang","_React$useState7","_React$useState8","setToLang","start","push","getSuggestionFromResults","components_TranslateField","components_SelectLanguage","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.7ef8d085.chunk.js","sourcesContent":["function httpGetAsync(theUrl, callback) {\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.onreadystatechange = function () {\n        if (xmlHttp.readyState === 4 && xmlHttp.status === 200) {\n            callback(xmlHttp.responseText);\n        }\n    }\n    xmlHttp.open (\"GET\", theUrl, true)\n    xmlHttp.send(null);\n}\n\nfunction getUrl(url, params) {\n    url += \"?\";\n    for (var key in params) {\n        url += key + \"=\" + params[key] + \"&\";\n    }\n\n    return url\n}\n\nexport {httpGetAsync, getUrl}","function ciEquals(a, b) {\n    return typeof a === 'string' && typeof b === 'string'\n        ? a.localeCompare(b, undefined, { sensitivity: 'accent' }) === 0\n        : a === b;\n}\n\nfunction isLocaleSubstring(big, small) {\n    if (small.length > big.length) {return false;}\n\n    for (let i = 0; i <= big.length - small.length; i++) {\n        let substringBig = big.substring(i, i + small.length);\n        if (ciEquals(substringBig, small)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction strip(html){\n    let doc = new DOMParser().parseFromString(html, 'text/html');\n    return doc.body.textContent || \"\";\n}\n\nfunction cleanHref(word) {\n    return strip(word);\n}\n\nfunction getRightID(wordList, word, suggestion = {}, getValue, getID) {\n    /**\n     * getValue(word) => value of the word to compare\n     * getID(word) => id of the word\n     */\n\n    for (let i = 0; i < wordList.length; i++) {\n        let wikidataTitle = cleanHref(getValue(wordList[i]));\n        if (isLocaleSubstring(wikidataTitle, word)) {\n\n            if (i === 0) {\n                suggestion.value = wordList.length > 1 ? getID(wordList[1]) : \"\";\n            } else {\n                suggestion.value = getID(wordList[0]);\n            }\n            return getID(wordList[i]);\n        }\n    }\n    suggestion.value = wordList.length > 1 ? getID(wordList[1]) : \"\";\n    return wordList.length > 0 ? getID(wordList[0]) : \"\";\n}\n\nfunction cleanParenthesis(word) {\n    if (word.length === 0) {return word;}\n\n    if (word[word.length - 1] !== \")\") {return word;}\n\n    let newWord = \"\";\n    for(let i = 0; i < word.length; i++) {\n        if (word[i] === \"(\") {break;}\n        newWord += word[i];\n    }\n    return newWord;\n}\nexport {cleanParenthesis, getRightID}","export const API_WIKIPEDIA = \".wikipedia.org/w/api.php\";\nexport const API_WIKIDATA = \"https://www.wikidata.org/w/api.php\";\n\nexport const langCode = {\n    ab: \"Abkhaz\",\n    aa: \"Afar\",\n    af: \"Afrikaans\",\n    ak: \"Akan\",\n    sq: \"Albanian\",\n    am: \"Amharic\",\n    ar: \"Arabic\",\n    an: \"Aragonese\",\n    hy: \"Armenian\",\n    as: \"Assamese\",\n    av: \"Avaric\",\n    ae: \"Avestan\",\n    ay: \"Aymara\",\n    az: \"Azerbaijani\",\n    bm: \"Bambara\",\n    ba: \"Bashkir\",\n    eu: \"Basque\",\n    be: \"Belarusian\",\n    bn: \"Bengali\",\n    bh: \"Bihari\",\n    bi: \"Bislama\",\n    bs: \"Bosnian\",\n    br: \"Breton\",\n    bg: \"Bulgarian\",\n    my: \"Burmese\",\n    ca: \"Catalan; Valencian\",\n    ch: \"Chamorro\",\n    ce: \"Chechen\",\n    ny: \"Chichewa; Chewa; Nyanja\",\n    zh: \"Chinese\",\n    cv: \"Chuvash\",\n    kw: \"Cornish\",\n    co: \"Corsican\",\n    cr: \"Cree\",\n    hr: \"Croatian\",\n    cs: \"Czech\",\n    da: \"Danish\",\n    dv: \"Divehi; Maldivian;\",\n    nl: \"Dutch\",\n    dz: \"Dzongkha\",\n    en: \"English\",\n    eo: \"Esperanto\",\n    et: \"Estonian\",\n    ee: \"Ewe\",\n    fo: \"Faroese\",\n    fj: \"Fijian\",\n    fi: \"Finnish\",\n    fr: \"French\",\n    ff: \"Fula\",\n    gl: \"Galician\",\n    ka: \"Georgian\",\n    de: \"German\",\n    el: \"Greek, Modern\",\n    gn: \"Guaraní\",\n    gu: \"Gujarati\",\n    ht: \"Haitian\",\n    ha: \"Hausa\",\n    he: \"Hebrew (modern)\",\n    hz: \"Herero\",\n    hi: \"Hindi\",\n    ho: \"Hiri Motu\",\n    hu: \"Hungarian\",\n    ia: \"Interlingua\",\n    id: \"Indonesian\",\n    ie: \"Interlingue\",\n    ga: \"Irish\",\n    ig: \"Igbo\",\n    ik: \"Inupiaq\",\n    io: \"Ido\",\n    is: \"Icelandic\",\n    it: \"Italian\",\n    iu: \"Inuktitut\",\n    ja: \"Japanese\",\n    jv: \"Javanese\",\n    kl: \"Kalaallisut\",\n    kn: \"Kannada\",\n    kr: \"Kanuri\",\n    ks: \"Kashmiri\",\n    kk: \"Kazakh\",\n    km: \"Khmer\",\n    ki: \"Kikuyu, Gikuyu\",\n    rw: \"Kinyarwanda\",\n    ky: \"Kirghiz, Kyrgyz\",\n    kv: \"Komi\",\n    kg: \"Kongo\",\n    ko: \"Korean\",\n    ku: \"Kurdish\",\n    kj: \"Kwanyama, Kuanyama\",\n    la: \"Latin\",\n    lb: \"Luxembourgish\",\n    lg: \"Luganda\",\n    li: \"Limburgish\",\n    ln: \"Lingala\",\n    lo: \"Lao\",\n    lt: \"Lithuanian\",\n    lu: \"Luba-Katanga\",\n    lv: \"Latvian\",\n    gv: \"Manx\",\n    mk: \"Macedonian\",\n    mg: \"Malagasy\",\n    ms: \"Malay\",\n    ml: \"Malayalam\",\n    mt: \"Maltese\",\n    mi: \"Māori\",\n    mr: \"Marathi (Marāṭhī)\",\n    mh: \"Marshallese\",\n    mn: \"Mongolian\",\n    na: \"Nauru\",\n    nv: \"Navajo, Navaho\",\n    nb: \"Norwegian Bokmål\",\n    nd: \"North Ndebele\",\n    ne: \"Nepali\",\n    ng: \"Ndonga\",\n    nn: \"Norwegian Nynorsk\",\n    no: \"Norwegian\",\n    ii: \"Nuosu\",\n    nr: \"South Ndebele\",\n    oc: \"Occitan\",\n    oj: \"Ojibwe, Ojibwa\",\n    cu: \"Old Church Slavonic\",\n    om: \"Oromo\",\n    or: \"Oriya\",\n    os: \"Ossetian, Ossetic\",\n    pa: \"Panjabi, Punjabi\",\n    pi: \"Pāli\",\n    fa: \"Persian\",\n    pl: \"Polish\",\n    ps: \"Pashto, Pushto\",\n    pt: \"Portuguese\",\n    qu: \"Quechua\",\n    rm: \"Romansh\",\n    rn: \"Kirundi\",\n    ro: \"Romanian, Moldavan\",\n    ru: \"Russian\",\n    sa: \"Sanskrit (Saṁskṛta)\",\n    sc: \"Sardinian\",\n    sd: \"Sindhi\",\n    se: \"Northern Sami\",\n    sm: \"Samoan\",\n    sg: \"Sango\",\n    sr: \"Serbian\",\n    gd: \"Scottish Gaelic\",\n    sn: \"Shona\",\n    si: \"Sinhala, Sinhalese\",\n    sk: \"Slovak\",\n    sl: \"Slovene\",\n    so: \"Somali\",\n    st: \"Southern Sotho\",\n    es: \"Spanish; Castilian\",\n    su: \"Sundanese\",\n    sw: \"Swahili\",\n    ss: \"Swati\",\n    sv: \"Swedish\",\n    ta: \"Tamil\",\n    te: \"Telugu\",\n    tg: \"Tajik\",\n    th: \"Thai\",\n    ti: \"Tigrinya\",\n    bo: \"Tibetan\",\n    tk: \"Turkmen\",\n    tl: \"Tagalog\",\n    tn: \"Tswana\",\n    to: \"Tonga\",\n    tr: \"Turkish\",\n    ts: \"Tsonga\",\n    tt: \"Tatar\",\n    tw: \"Twi\",\n    ty: \"Tahitian\",\n    ug: \"Uighur, Uyghur\",\n    uk: \"Ukrainian\",\n    ur: \"Urdu\",\n    uz: \"Uzbek\",\n    ve: \"Venda\",\n    vi: \"Vietnamese\",\n    vo: \"Volapük\",\n    wa: \"Walloon\",\n    cy: \"Welsh\",\n    wo: \"Wolof\",\n    fy: \"Western Frisian\",\n    xh: \"Xhosa\",\n    yi: \"Yiddish\",\n    yo: \"Yoruba\",\n    za: \"Zhuang, Chuang\",\n    zu: \"Zulu\"\n};\n\nexport const mathsLang = {\n    ab: \"\",\n    aa: \"\",\n    af: \"Wiskunde\",\n    ak: \"\",\n    sq: \"Matematika\",\n    am: \"ትምህርተ ሂሳብ\",\n    ar: \"رياضيات\",\n    an: \"Matematicas\",\n    hy: \"Մաթեմատիկա\",\n    as: \"গণিত\",\n    av: \"\",\n    ae: \"\",\n    ay: \"Jakhu\",\n    az: \"Riyaziyyat\",\n    bm: \"\",\n    ba: \"Математика\",\n    eu: \"Matematika\",\n    be: \"Матэматыка\",\n    bn: \"গণিত\",\n    bh: \"गणित\",\n    bi: \"Matematikis\",\n    bs: \"Matematika\",\n    br: \"Matematik\",\n    bg: \"Математика\",\n    my: \"သင်္ချာ\",\n    ca: \"Matemàtiques\",\n    ch: \"Matematika\",\n    ce: \"\",\n    ny: \"\",\n    zh: \"数学\",\n    cv: \"Математика\",\n    kw: \"Awgrym\",\n    co: \"Matematica\",\n    cr: \"\",\n    hr: \"Matematika\",\n    cs: \"Matematika\",\n    da: \"Matematik\",\n    dv: \"ރިޔާޟިއްޔާތު\",\n    nl: \"Wiskunde\",\n    dz: \"\",\n    en: \"Mathematics\",\n    eo: \"Matematiko\",\n    et: \"Matemaatika\",\n    ee: \"\",\n    fo: \"Støddfrøði\",\n    fj: \"Fika\",\n    fi: \"Matematiikka\",\n    fr: \"Mathématiques\",\n    ff: \"\",\n    gl: \"Matemáticas\",\n    ka: \"მათემატიკა\",\n    de: \"Mathematik\",\n    el: \"Μαθηματικά\",\n    gn: \"Papapykuaa\",\n    gu: \"ગણિત\",\n    ht: \"Matematik\",\n    ha: \"Lissafi\",\n    he: \"מתמטיקה\",\n    hz: \"\",\n    hi: \"गणित\",\n    ho: \"\",\n    hu: \"Matematika\",\n    ia: \"Mathematica\",\n    id: \"Matematika\",\n    ie: \"Matematica\",\n    ga: \"Matamaitic\",\n    ig: \"Ọmúmú-ónúọgụgụ\",\n    ik: \"\",\n    io: \"Matematiko\",\n    is: \"Stærðfræði\",\n    it: \"Matematica\",\n    iu: \"ᓈᓴᐅᓯᕆᓂᓗᒃᑖᖅ\",\n    ja: \"数学\",\n    jv: \"Matématika\",\n    kl: \"Matematikki\",\n    kn: \"ಗಣಿತ\",\n    kr: \"\",\n    ks: \"رِیٲضی\",\n    kk: \"Математика\",\n    km: \"គណិតវិទ្យា\",\n    ki: \"\",\n    rw: \"\",\n    ky: \"Математика\",\n    kv: \"\",\n    kg: \"\",\n    ko: \"수학\",\n    ku: \"Matematîk\",\n    kj: \"\",\n    la: \"Mathematica\",\n    lb: \"Mathematik\",\n    lg: \"Ekibalangulo\",\n    li: \"Mathematiek\",\n    ln: \"\",\n    lo: \"ຄະນິດສາດ\",\n    lt: \"Matematika\",\n    lu: \"\",\n    lv: \"Matemātika\",\n    gv: \"Maddaght\",\n    mk: \"Математика\",\n    mg: \"Fanisana\",\n    ms: \"Matematik\",\n    ml: \"ഗണിതം\",\n    mt: \"Matematika\",\n    mi: \"\",\n    mr: \"गणित\",\n    mh: \"\",\n    mn: \"Математик\",\n    na: \"\",\n    nv: \"Ałhiiʼnínáʼiidzóóh\",\n    nb: \"\",\n    nd: \"\",\n    ne: \"गणित\",\n    ng: \"\",\n    nn: \"Matematikk\",\n    no: \"Matematikk\",\n    ii: \"\",\n    nr: \"\",\n    oc: \"Matematicas\",\n    oj: \"\",\n    cu: \"\",\n    om: \"Herrega\",\n    or: \"ଗଣିତ\",\n    os: \"Математикæ\",\n    pa: \"ਗਣਿਤ\",\n    pi: \"गणितं\",\n    fa: \"ریاضیات\",\n    pl: \"Matematyka\",\n    ps: \"شمېرپوهنه\",\n    pt: \"Matemática\",\n    qu: \"Yupay yachay\",\n    rm: \"\",\n    rn: \"\",\n    ro: \"Matematică\",\n    ru: \"Математика\",\n    sa: \"गणितम्\",\n    sc: \"Matemàtica\",\n    sd: \"رياضي\",\n    se: \"\",\n    sm: \"Matematika\",\n    sg: \"\",\n    sr: \"Математика\",\n    gd: \"Matamataig\",\n    sn: \"Masvomhu\",\n    si: \"ගණිතය\",\n    sk: \"Matematika\",\n    sl: \"Matematika\",\n    so: \"Xisaab\",\n    st: \"\",\n    es: \"Matemáticas\",\n    su: \"Matematika\",\n    sw: \"Hisabati\",\n    ss: \"Tekubala\",\n    sv: \"Matematik\",\n    ta: \"கணிதம்\",\n    te: \"గణితం\",\n    tg: \"Риёзиёт\",\n    th: \"คณิตศาสตร์\",\n    ti: \"\",\n    bo: \"རྩིས་རིག\",\n    tk: \"Matematika\",\n    tl: \"Matematika\",\n    tn: \"Dipalo\",\n    to: \"\",\n    tr: \"Matematik\",\n    ts: \"Dyondzo-Tinhlayo\",\n    tt: \"Математика\",\n    tw: \"\",\n    ty: \"\",\n    ug: \"\",\n    uk: \"Математика\",\n    ur: \"ریاضی\",\n    uz: \"Matematika\",\n    ve: \"\",\n    vi: \"Toán học\",\n    vo: \"Matemat\",\n    wa: \"Matematike\",\n    cy: \"Mathemateg\",\n    wo: \"Xayma\",\n    fy: \"Wiskunde\",\n    xh: \"I-Mathematics\",\n    yi: \"מאטעמאטיק\",\n    yo: \"Mathimátíkì\",\n    za: \"Soqyoz\"\n};","/**\n * Abstract class Translator\n *\n * @class Translator\n */\n\nclass Translator {\n\n    constructor() {\n        this.setResult = (x => {});\n        this.setSuggestion = (x => {});\n        if (this.constructor == Translator) {\n            throw new Error(\"Abstract classes can't be instantiated.\");\n        }\n    }\n\n    translate(word, fromLang, toLang, setResult, setSuggestion) {\n        throw new Error(\"Method translator() must be implemented\");\n    }\n\n\n}\n\nexport default Translator;","class Item {\n    constructor(value= \"\", description= \"\") {\n        this.value = value;\n        this.description = description;\n    }\n}\n\nexport default Item;","import Translator from \"./Translator\";\nimport {API_WIKIPEDIA, mathsLang} from \"../api\";\nimport {getUrl, httpGetAsync} from \"../utils/httpUtils\";\nimport {cleanParenthesis, getRightID} from \"../utils/translateUtils\";\nimport Item from \"./Item\";\n\nclass WikipediaTranslator extends Translator {\n    constructor() {\n        super();\n\n        this.searchText = \"\";\n        this.suggestedPageID = \"\";\n        this.searchPageID = \"\";\n        this.fromLang = \"en\";\n        this.toLang = \"fr\";\n        this.searchingSuggestion = false;\n\n        this.callbackSend = this.callbackSend.bind(this);\n        this.callbackTranslate = this.callbackTranslate.bind(this);\n        this.getTranslatedWord = this.getTranslatedWord.bind(this);\n    }\n\n    async translate(word, fromLang, toLang, setResult, setSuggestion) {\n        this.fromLang = fromLang;\n        this.toLang = toLang;\n        this.searchText = word;\n        this.setResult = setResult;\n        this.searchingSuggestion = false;\n        this.setSuggestion = setSuggestion;\n\n        let srsearchValue = this.searchText + \" \" + mathsLang[this.fromLang];\n        let params = {\n            action: \"query\",\n            list: \"search\",\n            format: \"json\",\n            origin: \"*\",\n            srwhat: \"text\",\n            srlimit: \"20\",\n            srsearch: srsearchValue\n        };\n\n        let api_url = \"https://\" + this.fromLang + API_WIKIPEDIA\n\n        let url = getUrl(api_url, params);\n        httpGetAsync(url, this.callbackSend);\n    }\n\n    callbackSend(response) {\n        let data = JSON.parse(response);\n        let suggestion = {};\n\n        const wordList = data[\"query\"][\"search\"];\n        const getValue = (word => word[\"title\"]);\n        const getID = (word => word[\"pageid\"]);\n        this.searchPageID = getRightID(wordList, this.searchText, suggestion, getValue, getID);\n        this.suggestedPageID = suggestion.value;\n        this.getTranslatedWord();\n    }\n\n    getTranslatedWord() {\n        let params = {\n            action: \"query\",\n            format: \"json\",\n            prop: \"langlinks|description\",\n            pageids: this.searchPageID,\n            lllang: this.toLang,\n            lllimit: \"100\",\n            origin: \"*\",\n        };\n\n        let api_url = \"https://\" + this.fromLang + API_WIKIPEDIA;\n\n        let url = getUrl(api_url, params);\n        httpGetAsync(url, this.callbackTranslate);\n    }\n\n    callbackTranslate(response) {\n        let data = JSON.parse(response);\n\n        let translatedWord = new Item(\"\", \"\");\n\n        try {\n            let res = data[\"query\"][\"pages\"][this.searchPageID][\"langlinks\"];\n\n            let desc = \"\";\n            try {\n                desc = data[\"query\"][\"pages\"][this.searchPageID][\"description\"];\n            } catch (e) {\n                console.error(e, e.stack);\n            }\n\n\n            translatedWord = new Item(cleanParenthesis(res[0][\"*\"]), desc);\n        } catch (e) {\n            if (e instanceof TypeError) {\n                console.error(e, e.stack);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!this.searchingSuggestion) {\n            this.setResult(translatedWord);\n\n            this.searchPageID = this.suggestedPageID;\n            this.suggestedPageID = \"\"\n            this.searchingSuggestion = true;\n            this.getTranslatedWord();\n\n        } else {\n            this.setSuggestion(translatedWord);\n            this.searchingSuggestion = false;\n        }\n\n    }\n\n}\n\nexport default WikipediaTranslator;","import Translator from \"./Translator\";\nimport {API_WIKIDATA, mathsLang} from \"../api\";\nimport {getUrl, httpGetAsync} from \"../utils/httpUtils\";\nimport {cleanParenthesis, getRightID} from \"../utils/translateUtils\";\nimport Item from \"./Item\";\n\nclass WikidataTranslator extends Translator {\n    constructor() {\n        super();\n\n        this.searchText = \"\";\n        this.toLang = \"en\";\n        this.fromLang = \"fr\";\n\n        this.searchID = \"\";\n        this.suggestedID = \"\";\n        this.searchingSuggestion = false;\n\n        this.callbackSend = this.callbackSend.bind(this);\n        this.getTranslatedWord = this.getTranslatedWord.bind(this);\n        this.callbackTranslate = this.callbackTranslate.bind(this);\n    }\n    async translate(word, fromLang, toLang, setResult, setSuggestion) {\n        this.searchText = word;\n        this.toLang = toLang;\n        this.fromLang = fromLang;\n        this.setResult = setResult;\n        this.searchingSuggestion = false;\n        this.setSuggestion = setSuggestion;\n\n        let srsearchValue = this.searchText + \" \" + mathsLang[this.fromLang];\n        const params = {\n            action: \"query\",\n            list: \"search\",\n            format: \"json\",\n            srsearch: srsearchValue,\n            srprop: \"snippet|titlesnippet\",\n            origin: \"*\"\n        };\n\n        const url = getUrl(API_WIKIDATA, params);\n        httpGetAsync(url, this.callbackSend);\n    }\n\n    callbackSend(response) {\n        const data = JSON.parse(response);\n\n        let suggestion = {};\n        const wordList = data[\"query\"][\"search\"];\n        const getValue = (word => word[\"titlesnippet\"]);\n        const getID = (word => word[\"title\"]);\n        this.searchID = getRightID(wordList, this.searchText, suggestion, getValue, getID);\n        this.suggestedID = suggestion.value;\n\n        this.getTranslatedWord();\n    }\n\n    getTranslatedWord() {\n        const params = {\n            action: \"wbgetentities\",\n            format: \"json\",\n            ids: this.searchID,\n            languages: this.toLang + \"|\" + this.fromLang,\n            props: \"labels|descriptions\",\n            origin: \"*\"\n        };\n\n        const url = getUrl(API_WIKIDATA, params);\n        httpGetAsync(url, this.callbackTranslate);\n\n    }\n\n    callbackTranslate(response) {\n        const data = JSON.parse(response);\n\n        let translatedWord = new Item(\"\", \"\");\n\n        try {\n            let res = data[\"entities\"][this.searchID][\"labels\"][this.toLang];\n            let desc = \"\";\n\n            try {\n                desc = data[\"entities\"][this.searchID][\"descriptions\"][this.fromLang][\"value\"];\n            } catch (e) {\n                console.error(e, e.stack);\n            }\n\n            translatedWord = new Item(cleanParenthesis(res[\"value\"]), desc);\n        } catch (e) {\n            if (e instanceof TypeError) {\n                console.error(e, e.stack);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!this.searchingSuggestion) {\n            this.setResult(translatedWord);\n\n            this.searchingSuggestion = true;\n            this.searchID = this.suggestedID;\n            this.suggestedID = \"\";\n            this.getTranslatedWord();\n        } else {\n            this.searchingSuggestion = false;\n            this.setSuggestion(translatedWord);\n        }\n    }\n\n}\n\nexport default WikidataTranslator;","import React, { Component } from \"react\";\nimport {getUrl, httpGetAsync} from \"../utils/httpUtils\";\nimport {cleanParenthesis, getRightPageID} from \"../utils/translateUtils\";\nimport {API_WIKIPEDIA, mathsLang} from \"../api\";\nimport WikipediaTranslator from \"../Translators/WikipediaTranslator\";\nimport WikidataTranslator from \"../Translators/WikidataTranslator\";\nimport Item from \"../Translators/Item\";\n\nclass TranslateField extends Component {\n    constructor(props) {\n        super(props);\n        this.inputRef = React.createRef();\n\n        this.searchText = \"\";\n\n        this.translators = [new WikipediaTranslator(), new WikidataTranslator()]; // order of priority\n\n        this.props.setResults(Array(this.translators.length).fill(new Item(\"\", \"\")));\n        this.props.setSuggestion(Array(this.translators.length).fill(new Item(\"\", \"\")));\n\n        this.send = this.send.bind(this);\n    }\n\n    send(event) {\n        event.preventDefault();\n\n        this.searchText = event.target.search.value;\n        this.inputRef.current.value = \"\";\n        this.runTranslators();\n    }\n\n    async runTranslators() {\n\n        let result = this.searchText;\n\n        for (let i = 0; i < this.translators.length; i++) {\n\n            // set results[i] to i-th algorithm result\n            const setResult = (result => {\n                this.props.setResults(prevResult => prevResult.map((val, index, array) => index === i ? result : val));\n            });\n\n            const setSuggestion = (suggest => {\n                this.props.setSuggestion(prevSuggestion =>\n                    prevSuggestion.map((val, index, array) => index === i ? suggest : val));\n            })\n            this.translators[i].translate(this.searchText, this.props.fromLang, this.props.toLang, setResult, setSuggestion);\n        }\n    }\n\n\n    render() {\n        return (\n            <form onSubmit={this.send}>\n                <input name={\"search\"} placeholder={\"Input something\"} ref={this.inputRef}/>\n                <button type={\"submit\"}>Send</button>\n            </form>\n        )\n\n    }\n}\n\nexport default TranslateField;","import React, {Component} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@popperjs/core\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport \"bootstrap\";\nimport {langCode} from \"../api\";\n\n\nclass SelectLanguage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.langCodeKey = Object.keys(langCode);\n        this.langCodeKey.sort((a,b) => langCode[a].localeCompare(langCode[b]));\n\n        this.handleSelect = this.handleSelect.bind(this);\n    }\n\n    handleSelect(event) {\n        this.props.setLang(event);\n    }\n\n    render() {\n        return (\n            <Dropdown onSelect={this.handleSelect}>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    {langCode[this.props.lang]}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                    {this.langCodeKey.map(val => (\n                        <Dropdown.Item eventKey={val}>{langCode[val]}</Dropdown.Item>\n                    ))}\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n}\n\nexport default SelectLanguage;","import React from 'react';\nimport {httpGetAsync, getUrl} from './utils/httpUtils'\nimport TranslateField from \"./components/TranslateField\";\nimport SelectLanguage from \"./components/SelectLanguage\";\nimport Item from \"./Translators/Item\";\nimport './App.css';\n\n// if first algorithm can't translate the word, then results[0] would be empty, so check result[1], then result[2] until it's not empty. Prioritize result[0], then result[1], then result[2], ...\nfunction getResult(results) {\n    for (let i = 0; i < results.length; i++) {\n        if (results[i].value !== \"\" && results[i].value !== undefined) {\n            return results[i];\n        }\n    }\n    return new Item(\"\", \"\");\n}\n\nfunction getSuggestionFromResults(results) {\n    let suggestions = [];\n    let start = false;\n    for (let i = 0; i < results.length; i++) {\n        if (start) {\n            if (results[i].value !== \"\" && results[i].value !== undefined) {\n                suggestions.push(results[i]);\n            }\n            continue;\n        }\n\n        if (results[i].value !== \"\" && results[i].value !== undefined) {\n            start = true;\n        }\n    }\n    return suggestions;\n}\n\nexport default function App () {\n\n    /*\n    results, suggestions are list of Translators.Item\n    */\n    const [results, setResults] = React.useState([]); // use multiple translate algorithm, get multiple results. List order of priority\n    const [suggestions, setSuggestion] = React.useState([]);\n    const [fromLang, setFromLang] = React.useState(\"en\");\n    const [toLang, setToLang] = React.useState(\"fr\");\n\n    return (\n        <div>\n            <h1>mathstradjs</h1>\n            <h2>{getResult(results).value + \": \" + getResult(results).description}</h2>\n            {suggestions.map(val => (\n                val.value !== \"\" && val.value !== undefined ? <h3>Suggestion: {val.value + \": \" + val.description}</h3> : \"\"\n            ))}\n            \n            {getSuggestionFromResults(results).map(val => (\n                <h3>Suggestion: {val.value + \":: \" + val.description}</h3>\n            ))}\n            <TranslateField fromLang={fromLang} toLang={toLang} setResults={setResults} setSuggestion={setSuggestion}/>\n            <SelectLanguage lang={fromLang} setLang={setFromLang}/>\n            <SelectLanguage lang={toLang} setLang={setToLang}/>\n        </div>\n    )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}